<?php

/**
 * BaseHeros
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $level
 * @property integer $xp
 * @property integer $xp_next_level
 * @property integer $id_user
 * @property integer $position_x
 * @property integer $position_y
 * @property integer $id_map
 * @property Map $Map
 * @property Doctrine_Collection $Attributes
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method integer             getLevel()         Returns the current record's "level" value
 * @method integer             getXp()            Returns the current record's "xp" value
 * @method integer             getXpNextLevel()   Returns the current record's "xp_next_level" value
 * @method integer             getIdUser()        Returns the current record's "id_user" value
 * @method integer             getPositionX()     Returns the current record's "position_x" value
 * @method integer             getPositionY()     Returns the current record's "position_y" value
 * @method integer             getIdMap()         Returns the current record's "id_map" value
 * @method Map                 getMap()           Returns the current record's "Map" value
 * @method Doctrine_Collection getAttributes()    Returns the current record's "Attributes" collection
 * @method Heros               setId()            Sets the current record's "id" value
 * @method Heros               setName()          Sets the current record's "name" value
 * @method Heros               setLevel()         Sets the current record's "level" value
 * @method Heros               setXp()            Sets the current record's "xp" value
 * @method Heros               setXpNextLevel()   Sets the current record's "xp_next_level" value
 * @method Heros               setIdUser()        Sets the current record's "id_user" value
 * @method Heros               setPositionX()     Sets the current record's "position_x" value
 * @method Heros               setPositionY()     Sets the current record's "position_y" value
 * @method Heros               setIdMap()         Sets the current record's "id_map" value
 * @method Heros               setMap()           Sets the current record's "Map" value
 * @method Heros               setAttributes()    Sets the current record's "Attributes" collection
 * 
 * @package    unramalak
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHeros extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('heros');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('level', 'integer', null, array(
             'type' => 'integer',
             'default' => '1',
             'notnull' => true,
             ));
        $this->hasColumn('xp', 'integer', null, array(
             'type' => 'integer',
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('xp_next_level', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('id_user', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('position_x', 'integer', null, array(
             'type' => 'integer',
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('position_y', 'integer', null, array(
             'type' => 'integer',
             'default' => '0',
             'notnull' => true,
             ));
        $this->hasColumn('id_map', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Map', array(
             'local' => 'id_map',
             'foreign' => 'id'));

        $this->hasMany('Attributes', array(
             'local' => 'id',
             'foreign' => 'id_heros'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}